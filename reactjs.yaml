---
- hosts: frontend_servers

  vars:
    project_path: /var/www
    repository: https://gitlab.com/LaGGeR88/skillbox-depoly-blue-green


  tasks:

    - name: "Yarn | GPG"
      apt_key:
        url: https://dl.yarnpkg.com/debian/pubkey.gpg
        state: present

    - name: "Yarn | Ensure Debian sources list file exists"
      file:
        path: /etc/apt/sources.list.d/yarn.list
        owner: root
        mode: 0644
        state: touch

    - name: "Yarn | Ensure Debian package is in sources list"
      lineinfile:
        dest: /etc/apt/sources.list.d/yarn.list
        regexp: 'deb http://dl.yarnpkg.com/debian/ stable main'
        line: 'deb http://dl.yarnpkg.com/debian/ stable main'
        state: present

    - name: "Yarn | Update APT cache"
      apt:
        update_cache: yes

    - name: Install the packages YARN, NPM, NodeJS, Nginx, Git
      apt:
        pkg: ['yarn', 'nodejs', 'nginx', 'git']

    - name: Delete the html file
      file:
        path: "{{ project_path }}/html"
        state: absent

    - name: Set some variable
      set_fact:
        release_path: "{{ project_path }}/releases/{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}"
        current_path: "{{ project_path }}/html"

    - name: Create project path
      file:
        dest={{ project_path }}
        mode=0755
        recurse=yes
        state=directory

    - name: Retrieve current release folder
      command: readlink -f html
      register: current_release_path
      ignore_errors: yes
      args:
        chdir: "{{ project_path }}"

    - name: Create Release folder
      file:
        dest={{ release_path }}
        mode=0755
        recurse=yes
        state=directory

    - name: Clone the repository
      git:
        repo: "{{ repository }}"
        dest: "{{ release_path }}"

    - name: YARN install dependencies
      command: yarn install
      args:
        chdir: "{{ release_path }}"

    - name: YARN build
      command: yarn build
      args:
        chdir: "{{ release_path }}"

    - name: Update symlink
      file:
        src={{ release_path }}/build
        dest={{ current_path }}
        state=link
